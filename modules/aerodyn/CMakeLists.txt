#
# Copyright 2016 National Renewable Energy Laboratory
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
generate_f90_types(src/AeroAcoustics_Registry.txt AeroAcoustics_Types.f90)
generate_f90_types(src/AirfoilInfo_Registry.txt AirfoilInfo_Types.f90 -noextrap)
generate_f90_types(src/AeroDyn_Registry.txt AeroDyn_Types.f90)
generate_f90_types(src/BEMT_Registry.txt BEMT_Types.f90)
generate_f90_types(src/DBEMT_Registry.txt DBEMT_Types.f90)
generate_f90_types(src/UnsteadyAero_Registry.txt UnsteadyAero_Types.f90)

generate_f90_types(src/AeroDyn_Driver_Registry.txt AeroDyn_Driver_Types.f90 -noextrap)

# TNO
set(TNO_SOURCES
  src/AeroAcoustics/TNO/int1.f90
  src/AeroAcoustics/TNO/int2.f90
  src/AeroAcoustics/TNO/TNOMods.f90
  src/AeroAcoustics/TNO/pressure.f90
  src/AeroAcoustics/TNO/qk61.f
)
add_library(TNO ${TNO_SOURCES})

# TINoise
set(FULLGUIDATI_SOURCES
  src/AeroAcoustics/TINoise/CDA0.f90 
  src/AeroAcoustics/TINoise/CDI0.f90
  src/AeroAcoustics/TINoise/DEFGEO.f90
  src/AeroAcoustics/TINoise/DETCP.f90 
  src/AeroAcoustics/TINoise/DETFIELD.f90
  src/AeroAcoustics/TINoise/DETSPL.f90
  src/AeroAcoustics/TINoise/DETSTR.f90
  src/AeroAcoustics/TINoise/DRM_ACU.f90
  src/AeroAcoustics/TINoise/DRM_AER.f90
  src/AeroAcoustics/TINoise/FLAT.f90
  src/AeroAcoustics/TINoise/FUNCS_LM.f90
  src/AeroAcoustics/TINoise/HANK0.f90
  src/AeroAcoustics/TINoise/HANK1.f90
  src/AeroAcoustics/TINoise/INICON.f90
  src/AeroAcoustics/TINoise/odeint.f90
  src/AeroAcoustics/TINoise/PRESOUR.f90
  src/AeroAcoustics/TINoise/READIN.f90
  src/AeroAcoustics/TINoise/RHSINT.f90
  src/AeroAcoustics/TINoise/rkck.f90
  src/AeroAcoustics/TINoise/rkqs.f90
  src/AeroAcoustics/TINoise/SETMATA.f90
  src/AeroAcoustics/TINoise/SETMAT.f90
  src/AeroAcoustics/TINoise/SETRHSA.f90
  src/AeroAcoustics/TINoise/SETRHS.f90
  src/AeroAcoustics/TINoise/SOLSEQA.f90
  src/AeroAcoustics/TINoise/SOLSEQ.f90
  src/AeroAcoustics/TINoise/SPL_E0A.f90
  src/AeroAcoustics/TINoise/SPL_E1A.f90
  src/AeroAcoustics/TINoise/SPL_EX1.f90
  src/AeroAcoustics/TINoise/SPL_EX2.f90
  src/AeroAcoustics/TINoise/SPL_EX3.f90
  src/AeroAcoustics/TINoise/SPL_EX.f90
  src/AeroAcoustics/TINoise/SPL_PA.f90
  src/AeroAcoustics/TINoise/SPL_P.f90
  src/AeroAcoustics/TINoise/SPL_PPA.f90
  src/AeroAcoustics/TINoise/SPL_PP.f90
  src/AeroAcoustics/TINoise/STREAM.f90
  src/AeroAcoustics/TINoise/TI_Noise.f90
  src/AeroAcoustics/TINoise/TINoiseMods.f90
  src/AeroAcoustics/TINoise/WAKE.f90
)
add_library(FullGuidati ${FULLGUIDATI_SOURCES})


# AeroAcoustics
set(AEROACOUSTIC_SOURCES
  src/AeroAcoustics/AeroAcoustics.f90
  src/AeroAcoustics/AeroAcoustics_IO.f90

  AeroAcoustics_Types.f90
  # this target shouldnt depend on airfoilinfo as this creates a circular reference
  AirfoilInfo_Types.f90
)
add_library(AeroAcoustics ${AEROACOUSTIC_SOURCES})
target_link_libraries(AeroAcoustics nwtclibs FullGuidati TNO)

# AeroDyn lib
set(AD_LIBS_SOURCES
  src/AeroDyn.f90
  src/AeroDyn_IO.f90
  src/AirfoilInfo.f90
  src/BEMT.f90
  src/DBEMT.f90
  src/BEMTUncoupled.f90
  src/UnsteadyAero.f90
  src/fmin_fcn.f90
  src/mod_root1dim.f90

  # Autogenerated files
  AeroDyn_Types.f90
  AirfoilInfo_Types.f90
  BEMT_Types.f90
  DBEMT_Types.f90
  UnsteadyAero_Types.f90
  )

add_library(aerodynlib ${AD_LIBS_SOURCES})
target_link_libraries(aerodynlib nwtclibs AeroAcoustics)

# AeroDyn driver
set(AD_DRIVER_SOURCES
  src/AeroDyn_Driver.f90
  src/AeroDyn_Driver_Subs.f90

  # Autogenerated files
  AeroDyn_Driver_Types.f90)

add_executable(aerodyn_driver ${AD_DRIVER_SOURCES})

target_link_libraries(aerodyn_driver aerodynlib nwtclibs versioninfolib AeroAcoustics ${CMAKE_DL_LIBS})


# UnsteadyAero driver
set(UA_DRIVER_SOURCES
  src/UnsteadyAero_Driver.f90
  src/UA_Dvr_Subs.f90
)
add_executable(unsteadyaero_driver ${UA_DRIVER_SOURCES})
target_link_libraries(unsteadyaero_driver aerodynlib nwtclibs versioninfolib ${CMAKE_DL_LIBS})

install(TARGETS unsteadyaero_driver aerodyn_driver aerodynlib AeroAcoustics FullGuidati TNO
  EXPORT "${CMAKE_PROJECT_NAME}Libraries"
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib)
